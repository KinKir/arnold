---

- hosts: local
  gather_facts: False
  vars_files:
    - "group_vars/customer/{{ customer }}.yml"
    - "group_vars/env_type/{{ env_type }}.yml"

  tasks:

    # Find all files named "credentials.vault.yml" for a customer in an
    # environment. This file should be yaml formatted and it must define all
    # environment variables required to run an application, _e.g._:
    #
    # # files/secret/patient0/staging/credentials.vault.yaml
    # DJANGO_SECRET_KEY: this is my key
    # POSTGRESQL_USER: foo
    - name: Find all project specific files related to credentials
      find:
        paths: "files/secret/{{ customer }}/{{ env_type }}"
        pattern: "credentials.vault.yml"
        recurse: yes
      register: project_credentials  # Record the list of files in a variable used below

    # For every credentials file, compile the OpenShift secret object template
    # (see templates/secret/env_vars.yml.j2) given a group (the application,
    # _e.g._ richie or edxapp) and the set of environment variables defined in
    # the above mentionned credentials file.
    #
    # Nota bene: we store all secrets separated by a '||' in the project_secrets
    # variable, to iterate over secrets, you will need to split('||') that
    # variable first.
    - set_fact:
        project_secrets: |
          {% for item in project_credentials.files -%}
            {% set group = item.path | relpath('files/secret/' + customer + '/' + env_type) | dirname -%}
            {% set env_vars = lookup('template', item.path) | from_yaml -%}
            {% include "templates/secret/env_vars.yml.j2" -%}
            {% if not loop.last -%}||{% endif -%}
          {%- endfor %}

    # Create all project secrets (for every group)
    - name: Actually create the secrets in OpenShift
      openshift_raw:
        state: present
        definition: "{{ item | from_yaml }}"
      with_items: "{{ project_secrets.split('||') }}"
