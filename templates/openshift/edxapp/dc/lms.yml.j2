apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: edxapp-lms
    version: "{{ edxapp_tag }}"
    deployment_stamp: "{{ deployment_stamp }}"
  name: edxapp-lms-{{ deployment_stamp }}
  namespace: "{{ project_name }}"
spec:
  replicas: 1  # number of pods we want
  selector:
    app: edxapp-lms
    deploymentconfig: edxapp-lms-{{ deployment_stamp }}
  template:
    metadata:
      labels:
        app: edxapp-lms
        deploymentconfig: edxapp-lms-{{ deployment_stamp }}
        deployment_stamp: "{{ deployment_stamp }}"
    spec:
      containers:
      - name: edxapp-lms
        env:
        - name: SERVICE_VARIANT
          value: lms
        - name: DJANGO_SETTINGS_MODULE
          value: lms.envs.docker_run
        image: "{{ edxapp_image }}:{{ edxapp_tag }}"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /config
          name: edxapp-config
        - mountPath: /edx/var/edxapp/media
          name: edxapp-v-media
        - mountPath: /edx/var/edxapp/static
          name: edxapp-v-static
      initContainers:
      # The first init container has nothing mounted on its "/config" directory
      # We copy its content to the "/tmp/config" directory where the second init
      # container can override the settings files before the main edxapp container
      # can use it as its configuration to start.
      - name: init-copy
        image: "{{ edxapp_image }}:{{ edxapp_tag }}"
        imagePullPolicy: IfNotPresent
        # Add "|| exit 0" so that the command does not fail when the /config directory is empty
        command:
          - "/bin/bash"
          - "-c"
          - cp -r /config/* /tmp/config || exit 0
        volumeMounts:
        - mountPath: /tmp/config
          name: edxapp-config
      # The second init container overrides settings files with what is available in
      # the "edxapp" configmap for this project. In this process, the vaulted files
      # are also being decrypted with the vaultpass mounted as environment variable
      # from the secrets.
      - name: init-override
        image: docker-registry.default.svc:5000/openshift/arnold:0.1.0-alpha
        imagePullPolicy: Always
        env:
        # The vaultpass secret is recorded in OpenShift's secrets when creating a new project
        - name: ANSIBLE_VAULT_PASS
          valueFrom:
            secretKeyRef:
              name: vaultpass
              key: vaultpass
        # "cp -rL" because OpenShift mounted the files in configMap as symnolic links
        command:
          - "/bin/bash"
          - "-c"
          - |
            cp -rL /tmp/configmap/* /tmp/config;
            for i in $(find /tmp/configmap -name "*.vault.*");
            do
              ansible-vault view --vault-password-file .vault_pass.sh ${i} > /tmp/config/$(basename ${i});
            done
        volumeMounts:
        - mountPath: /tmp/configmap
          name: edxapp-configmap
        - mountPath: /tmp/config
          name: edxapp-config
      volumes:
      - name: edxapp-configmap
        configMap:
          defaultMode: 420
          name: edxapp-{{ deployment_stamp }}
      - name: edxapp-config
        emptyDir: {}  # volume that lives as long as the pod lives
      - name: edxapp-v-media
        persistentVolumeClaim:
          claimName: edxapp-pvc-media
      - name: edxapp-v-static
        persistentVolumeClaim:
          claimName: edxapp-pvc-static
